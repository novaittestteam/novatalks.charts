apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.project_name }}-botflow
  namespace: {{ .Values.global.customer_name }}
  labels:
    app: {{ .Values.global.project_name }}-botflow
spec:
  replicas: {{ int .Values.botflow.replica }}
  selector:
    matchLabels:
      app: {{ .Values.global.project_name }}-botflow
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.global.project_name }}-botflow
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "kubernetes.io/hostname"
                  operator: In
                  values:
                  {{- include "getNodes" ( list $.Values.global.nodeBind ) }}
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoExecute"
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: NODE_RED_OPTIONS
          value: '"-s /opt/nova.botflow/config/settings.js"' #If you need some settings change this path to mounted follder {{ .Values.global.project_name }}-botflow-conf
        image: {{ .Values.botflow.image }}:{{ .Values.botflow.tag  }}
        imagePullPolicy: "IfNotPresent"
        resources:
          limits:
          {{- include "getSizingResources" ( list $.Values.botflow.resources $.Values.botflow.sizing ) }}
          requests:
            memory: "128Mi"
            cpu: "100m"
        name: {{ .Values.global.project_name }}-botflow
        ports:
        - containerPort: {{ int .Values.botflow.containerPort }}
        volumeMounts:
        - name: {{ .Values.global.project_name }}-botflow-conf
          mountPath: /opt/nova.botflow/config/
        - name: {{ .Values.global.project_name }}-botflow-userdata
          mountPath: /opt/nova.botflow/userdata
          subPath: userdata
      restartPolicy: Always
      volumes:
      - name: {{ .Values.global.project_name }}-botflow-conf
        configMap:
          name: {{ .Values.global.project_name }}-botflow-config
      - name: {{ .Values.global.project_name }}-botflow-userdata
        persistentVolumeClaim:
          claimName: {{ .Values.global.project_name }}-storage-pvc
status: {}
