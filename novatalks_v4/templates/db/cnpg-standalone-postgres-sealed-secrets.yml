apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/namespace-wide: "true"
  name: {{ .Values.global.project_name }}-postgres-secret
  namespace: {{ .Values.global.customer_name }}
spec:
  encryptedData:
    password: {{ .Values.secrets.db.pass }}
    username: {{ .Values.secrets.db.user }}
  template:
    metadata:
      name: {{ .Values.global.project_name }}-postgres-secret
      namespace: {{ .Values.global.customer_name }}
    type: kubernetes.io/basic-auth

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/cluster-wide: "true"
  name: {{ .Values.global.project_name }}-redis-secret
  namespace: {{ .Values.global.customer_name }}
spec:
  encryptedData:
    #Has been used special key that allow empty pass. --allow-empty-data
    password: {{ .Values.secrets.redis.pass }}
  template:
    metadata:
      name: {{ .Values.global.project_name }}-redis-secret
      namespace: {{ .Values.global.customer_name }}
    type: kubernetes.io/basic-auth

---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  annotations:
    sealedsecrets.bitnami.com/namespace-wide: "true"
  name: {{ .Values.global.project_name }}-s3-secret
  namespace: {{ .Values.global.customer_name }}
spec:
  encryptedData:
    secretAccessKeyID: {{ .Values.secrets.objectStorage.AccessKeyID }}
    secretAccessKey: {{ .Values.secrets.objectStorage.AccessKey }}
  template:
    metadata:
      name: {{ .Values.global.project_name }}-s3-secret
      namespace: {{ .Values.global.customer_name }}
    type: Opaque