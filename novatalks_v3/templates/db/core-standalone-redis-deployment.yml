apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.project_name }}-redis
  namespace: {{ .Values.global.customer_name }}
  labels:
    app: {{ .Values.global.project_name }}-redis
spec:
  replicas: {{ int .Values.redis.replica }}
  selector:
    matchLabels:
      app: {{ .Values.global.project_name }}-redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.global.project_name }}-redis
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "kubernetes.io/hostname"
                  operator: In
                  values: 
                  {{- include "getNodes" ( list $.Values.global.nodeBind ) }}
      tolerations:
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoExecute"
      - key: "kubernetes.io/hostname"
        operator: "Equal"
        value: "k3d-rancher-test-cluster-agent-0"
        effect: "NoExecute"
      containers:
      - name: {{ .Values.global.project_name }}-redis
        image: redis:7.0.0
        imagePullPolicy: "IfNotPresent"
        command:
          - redis-server
          - "/redis-master/redis.conf"
        ports:
        - containerPort: 6379
        resources:
          limits:
          {{- include "getSizingResources" ( list $.Values.redis.resources $.Values.redis.sizing ) }}
          requests:
            memory: "64Mi"
            cpu: "20m"
        volumeMounts:
        - mountPath: /data
          name: {{ .Values.global.project_name }}-redisdb
          subPath: ./db/redis
        #- mountPath: /redis-master-data
        #  name: data
        - mountPath: /redis-master
          name: config
      volumes:
      - name: data
        emptyDir: {}
      - name: config
        configMap:
          name: {{ .Values.global.project_name }}-redis-config
          items:
          - key: redis-config
            path: redis.conf
      - name: {{ .Values.global.project_name }}-redisdb
        persistentVolumeClaim:
          claimName: {{ .Values.global.project_name }}-redis-pvc
